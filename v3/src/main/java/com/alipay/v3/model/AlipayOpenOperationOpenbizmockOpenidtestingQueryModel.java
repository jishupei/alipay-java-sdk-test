/*
 * 支付宝开放平台API
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alipay.v3.model;

import java.util.Objects;
import java.util.Arrays;
import com.alipay.v3.model.OpenidComplex;
import com.alipay.v3.model.UserDetail;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.io.Serializable;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import com.alipay.v3.JSON;

/**
 * AlipayOpenOperationOpenbizmockOpenidtestingQueryModel
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class AlipayOpenOperationOpenbizmockOpenidtestingQueryModel {
  private static final long serialVersionUID = 1L;

  public static final String SERIALIZED_NAME_EXTRA_JSON = "extra_json";
  @SerializedName(SERIALIZED_NAME_EXTRA_JSON)
  private String extraJson;

  public static final String SERIALIZED_NAME_EXTRA_JSON1 = "extra_json_1";
  @SerializedName(SERIALIZED_NAME_EXTRA_JSON1)
  private String extraJson1;

  public static final String SERIALIZED_NAME_TEST = "test";
  @SerializedName(SERIALIZED_NAME_TEST)
  private OpenidComplex test;

  public static final String SERIALIZED_NAME_TEST_WRONG = "test_wrong";
  @SerializedName(SERIALIZED_NAME_TEST_WRONG)
  private String testWrong;

  public static final String SERIALIZED_NAME_USER_DETAIL = "user_detail";
  @SerializedName(SERIALIZED_NAME_USER_DETAIL)
  private UserDetail userDetail;

  public AlipayOpenOperationOpenbizmockOpenidtestingQueryModel() { 
  }

  public AlipayOpenOperationOpenbizmockOpenidtestingQueryModel extraJson(String extraJson) {
    
    this.extraJson = extraJson;
    return this;
  }

   /**
   * adadsad
   * @return extraJson
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{}", value = "adadsad")

  public String getExtraJson() {
    return extraJson;
  }


  public void setExtraJson(String extraJson) {
    this.extraJson = extraJson;
  }


  public AlipayOpenOperationOpenbizmockOpenidtestingQueryModel extraJson1(String extraJson1) {
    
    this.extraJson1 = extraJson1;
    return this;
  }

   /**
   * xxx
   * @return extraJson1
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "{}", value = "xxx")

  public String getExtraJson1() {
    return extraJson1;
  }


  public void setExtraJson1(String extraJson1) {
    this.extraJson1 = extraJson1;
  }


  public AlipayOpenOperationOpenbizmockOpenidtestingQueryModel test(OpenidComplex test) {
    
    this.test = test;
    return this;
  }

   /**
   * Get test
   * @return test
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OpenidComplex getTest() {
    return test;
  }


  public void setTest(OpenidComplex test) {
    this.test = test;
  }


  public AlipayOpenOperationOpenbizmockOpenidtestingQueryModel testWrong(String testWrong) {
    
    this.testWrong = testWrong;
    return this;
  }

   /**
   * 1
   * @return testWrong
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(example = "1", value = "1")

  public String getTestWrong() {
    return testWrong;
  }


  public void setTestWrong(String testWrong) {
    this.testWrong = testWrong;
  }


  public AlipayOpenOperationOpenbizmockOpenidtestingQueryModel userDetail(UserDetail userDetail) {
    
    this.userDetail = userDetail;
    return this;
  }

   /**
   * Get userDetail
   * @return userDetail
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public UserDetail getUserDetail() {
    return userDetail;
  }


  public void setUserDetail(UserDetail userDetail) {
    this.userDetail = userDetail;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    AlipayOpenOperationOpenbizmockOpenidtestingQueryModel alipayOpenOperationOpenbizmockOpenidtestingQueryModel = (AlipayOpenOperationOpenbizmockOpenidtestingQueryModel) o;
    return Objects.equals(this.extraJson, alipayOpenOperationOpenbizmockOpenidtestingQueryModel.extraJson) &&
        Objects.equals(this.extraJson1, alipayOpenOperationOpenbizmockOpenidtestingQueryModel.extraJson1) &&
        Objects.equals(this.test, alipayOpenOperationOpenbizmockOpenidtestingQueryModel.test) &&
        Objects.equals(this.testWrong, alipayOpenOperationOpenbizmockOpenidtestingQueryModel.testWrong) &&
        Objects.equals(this.userDetail, alipayOpenOperationOpenbizmockOpenidtestingQueryModel.userDetail);
  }

  @Override
  public int hashCode() {
    return Objects.hash(extraJson, extraJson1, test, testWrong, userDetail);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class AlipayOpenOperationOpenbizmockOpenidtestingQueryModel {\n");
    sb.append("    extraJson: ").append(toIndentedString(extraJson)).append("\n");
    sb.append("    extraJson1: ").append(toIndentedString(extraJson1)).append("\n");
    sb.append("    test: ").append(toIndentedString(test)).append("\n");
    sb.append("    testWrong: ").append(toIndentedString(testWrong)).append("\n");
    sb.append("    userDetail: ").append(toIndentedString(userDetail)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("extra_json");
    openapiFields.add("extra_json_1");
    openapiFields.add("test");
    openapiFields.add("test_wrong");
    openapiFields.add("user_detail");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to AlipayOpenOperationOpenbizmockOpenidtestingQueryModel
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (AlipayOpenOperationOpenbizmockOpenidtestingQueryModel.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in AlipayOpenOperationOpenbizmockOpenidtestingQueryModel is not found in the empty JSON string", AlipayOpenOperationOpenbizmockOpenidtestingQueryModel.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!AlipayOpenOperationOpenbizmockOpenidtestingQueryModel.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `AlipayOpenOperationOpenbizmockOpenidtestingQueryModel` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if (jsonObj.get("extra_json") != null && !jsonObj.get("extra_json").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `extra_json` to be a primitive type in the JSON string but got `%s`", jsonObj.get("extra_json").toString()));
      }
      if (jsonObj.get("extra_json_1") != null && !jsonObj.get("extra_json_1").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `extra_json_1` to be a primitive type in the JSON string but got `%s`", jsonObj.get("extra_json_1").toString()));
      }
      // validate the optional field `test`
      if (jsonObj.getAsJsonObject("test") != null) {
        OpenidComplex.validateJsonObject(jsonObj.getAsJsonObject("test"));
      }
      if (jsonObj.get("test_wrong") != null && !jsonObj.get("test_wrong").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `test_wrong` to be a primitive type in the JSON string but got `%s`", jsonObj.get("test_wrong").toString()));
      }
      // validate the optional field `user_detail`
      if (jsonObj.getAsJsonObject("user_detail") != null) {
        UserDetail.validateJsonObject(jsonObj.getAsJsonObject("user_detail"));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!AlipayOpenOperationOpenbizmockOpenidtestingQueryModel.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'AlipayOpenOperationOpenbizmockOpenidtestingQueryModel' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<AlipayOpenOperationOpenbizmockOpenidtestingQueryModel> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(AlipayOpenOperationOpenbizmockOpenidtestingQueryModel.class));

       return (TypeAdapter<T>) new TypeAdapter<AlipayOpenOperationOpenbizmockOpenidtestingQueryModel>() {
           @Override
           public void write(JsonWriter out, AlipayOpenOperationOpenbizmockOpenidtestingQueryModel value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public AlipayOpenOperationOpenbizmockOpenidtestingQueryModel read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of AlipayOpenOperationOpenbizmockOpenidtestingQueryModel given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of AlipayOpenOperationOpenbizmockOpenidtestingQueryModel
  * @throws IOException if the JSON string is invalid with respect to AlipayOpenOperationOpenbizmockOpenidtestingQueryModel
  */
  public static AlipayOpenOperationOpenbizmockOpenidtestingQueryModel fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, AlipayOpenOperationOpenbizmockOpenidtestingQueryModel.class);
  }

 /**
  * Convert an instance of AlipayOpenOperationOpenbizmockOpenidtestingQueryModel to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

