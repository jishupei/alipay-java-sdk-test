/*
 * 支付宝开放平台API
 * 支付宝开放平台v3协议文档
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package com.alipay.v3.api;

import com.alipay.v3.ApiCallback;
import com.alipay.v3.ApiClient;
import com.alipay.v3.ApiException;
import com.alipay.v3.ApiResponse;
import com.alipay.v3.Configuration;
import com.alipay.v3.Pair;
import com.alipay.v3.ProgressRequestBody;
import com.alipay.v3.ProgressResponseBody;
import com.alipay.v3.util.AlipayLogger;
import com.alipay.v3.util.model.CustomizedParams;

import com.google.common.base.Strings;
import com.google.gson.reflect.TypeToken;

import java.io.IOException;


import com.alipay.v3.model.AlipayOpenOperationOpenbizmockCloselyrzoneQueryDefaultResponse;
import com.alipay.v3.model.AlipayOpenOperationOpenbizmockCloselyrzoneQueryResponseModel;
import com.alipay.v3.model.AlipayOpenOperationOpenbizmockEncrydataQueryDefaultResponse;
import com.alipay.v3.model.AlipayOpenOperationOpenbizmockEncrydataQueryModel;
import com.alipay.v3.model.AlipayOpenOperationOpenbizmockEncrydataQueryResponseModel;
import com.alipay.v3.model.AlipayOpenOperationOpenbizmockGzoneQueryDefaultResponse;
import com.alipay.v3.model.AlipayOpenOperationOpenbizmockGzoneQueryResponseModel;
import com.alipay.v3.model.AlipayOpenOperationOpenbizmockOpenidtestingQueryDefaultResponse;
import com.alipay.v3.model.AlipayOpenOperationOpenbizmockOpenidtestingQueryModel;
import com.alipay.v3.model.AlipayOpenOperationOpenbizmockOpenidtestingQueryResponseModel;
import com.alipay.v3.model.AlipayOpenOperationOpenbizmockRzoneQueryDefaultResponse;
import com.alipay.v3.model.AlipayOpenOperationOpenbizmockRzoneQueryResponseModel;
import com.alipay.v3.model.AlipayOpenOperationOpenbizmockRzonegroovyQueryDefaultResponse;
import com.alipay.v3.model.AlipayOpenOperationOpenbizmockRzonegroovyQueryModel;
import com.alipay.v3.model.AlipayOpenOperationOpenbizmockRzonegroovyQueryResponseModel;
import com.alipay.v3.model.AlipayOpenOperationOpenbizmockTestcertificateQueryDefaultResponse;
import com.alipay.v3.model.AlipayOpenOperationOpenbizmockTestcertificateQueryResponseModel;
import com.alipay.v3.model.AlipayOpenOperationOpenbizmockTesterrorcodeQueryDefaultResponse;
import com.alipay.v3.model.AlipayOpenOperationOpenbizmockTesterrorcodeQueryResponseModel;
import com.alipay.v3.model.AlipayOpenOperationOpenbizmockTestpathkeyQueryDefaultResponse;
import com.alipay.v3.model.AlipayOpenOperationOpenbizmockTestpathkeyQueryModel;
import com.alipay.v3.model.AlipayOpenOperationOpenbizmockTestpathkeyQueryResponseModel;

import java.lang.reflect.Type;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.ws.rs.core.GenericType;

public class OperationApi {
    private ApiClient localVarApiClient;
    private int localHostIndex;
    private String localCustomBaseUrl;

    public OperationApi() {
        this(Configuration.getDefaultApiClient());
    }

    public OperationApi(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public ApiClient getApiClient() {
        return localVarApiClient;
    }

    public void setApiClient(ApiClient apiClient) {
        this.localVarApiClient = apiClient;
    }

    public int getHostIndex() {
        return localHostIndex;
    }

    public void setHostIndex(int hostIndex) {
        this.localHostIndex = hostIndex;
    }

    public String getCustomBaseUrl() {
        return localCustomBaseUrl;
    }

    public void setCustomBaseUrl(String customBaseUrl) {
        this.localCustomBaseUrl = customBaseUrl;
    }

    /**
     * Build call for query
     * @param a 测试人员测试 (required)
     * @param _callback Callback for upload/download progress
     * @param customizedParams
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call queryCall(String a, final ApiCallback _callback, CustomizedParams customizedParams) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/alipay/open/operation/openbizmock/closelyrzone/query";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (a != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("a", a));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        if (customizedParams != null) {
            //额外query参数
            if (customizedParams.getQueryParams() != null && customizedParams.getQueryParams().size() > 0) {
                for (Map.Entry<String, String> entry : customizedParams.getQueryParams().entrySet()) {
                    localVarQueryParams.addAll(localVarApiClient.parameterToPair(entry.getKey(), entry.getValue()));
                }
            }

            if (!Strings.isNullOrEmpty(customizedParams.getAppAuthToken())) {
                localVarHeaderParams.put("alipay-app-auth-token", customizedParams.getAppAuthToken());
            }

            //额外非全局header参数
            if (customizedParams.getHeaderParams() != null && customizedParams.getHeaderParams().size() > 0) {
                localVarHeaderParams.putAll(customizedParams.getHeaderParams());
            }
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call queryValidateBeforeCall(String a, final ApiCallback _callback, CustomizedParams customizedParams) throws ApiException {
        
        // verify the required parameter 'a' is set
        if (a == null) {
            throw new ApiException("Missing the required parameter 'a' when calling query(Async)");
        }
        

        okhttp3.Call localVarCall = queryCall(a, _callback, customizedParams);
        return localVarCall;

    }

    /**
     * 测试路由转发closelyrzone
     * 测试路由转发closelyrzone
     * @param a 测试人员测试 (required)
     * @return AlipayOpenOperationOpenbizmockCloselyrzoneQueryResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public AlipayOpenOperationOpenbizmockCloselyrzoneQueryResponseModel query(String a) throws ApiException {
        ApiResponse<AlipayOpenOperationOpenbizmockCloselyrzoneQueryResponseModel> localVarResp = queryWithHttpInfo(a, null);
        return localVarResp.getData();
    }

    public AlipayOpenOperationOpenbizmockCloselyrzoneQueryResponseModel query(String a, CustomizedParams customizedParams) throws ApiException {
        ApiResponse<AlipayOpenOperationOpenbizmockCloselyrzoneQueryResponseModel> localVarResp = queryWithHttpInfo(a, customizedParams);
        return localVarResp.getData();
    }

    /**
     * 测试路由转发closelyrzone
     * 测试路由转发closelyrzone
     * @param a 测试人员测试 (required)
     * @return ApiResponse&lt;AlipayOpenOperationOpenbizmockCloselyrzoneQueryResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AlipayOpenOperationOpenbizmockCloselyrzoneQueryResponseModel> queryWithHttpInfo(String a, CustomizedParams customizedParams) throws ApiException {
        okhttp3.Call localVarCall = queryValidateBeforeCall(a, null, customizedParams);
        try {
            Type localVarReturnType = new TypeToken<AlipayOpenOperationOpenbizmockCloselyrzoneQueryResponseModel>(){}.getType();
            return localVarApiClient.execute(localVarCall, localVarReturnType);
        } catch (ApiException e) {
            try {
                e.setErrorObject(localVarApiClient.getJSON().getGson().fromJson(e.getResponseBody(), new TypeToken<AlipayOpenOperationOpenbizmockCloselyrzoneQueryDefaultResponse>(){}.getType()));
            } catch (Exception ex) {
                AlipayLogger.logBizWarn(ex);
            }
            throw e;
        }
    }

    /**
     * 测试路由转发closelyrzone (asynchronously)
     * 测试路由转发closelyrzone
     * @param a 测试人员测试 (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call queryAsync(String a, final ApiCallback<AlipayOpenOperationOpenbizmockCloselyrzoneQueryResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = queryValidateBeforeCall(a, _callback, null);
        Type localVarReturnType = new TypeToken<AlipayOpenOperationOpenbizmockCloselyrzoneQueryResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public okhttp3.Call queryAsync(String a, final ApiCallback<AlipayOpenOperationOpenbizmockCloselyrzoneQueryResponseModel> _callback, CustomizedParams customizedParams) throws ApiException {

        okhttp3.Call localVarCall = queryValidateBeforeCall(a, _callback, customizedParams);
        Type localVarReturnType = new TypeToken<AlipayOpenOperationOpenbizmockCloselyrzoneQueryResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for query_0
     * @param alipayOpenOperationOpenbizmockEncrydataQueryModel  (optional)
     * @param _callback Callback for upload/download progress
     * @param customizedParams
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call query_0Call(AlipayOpenOperationOpenbizmockEncrydataQueryModel alipayOpenOperationOpenbizmockEncrydataQueryModel, final ApiCallback _callback, CustomizedParams customizedParams) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = (customizedParams != null && !Strings.isNullOrEmpty(customizedParams.getBodyContent()))
                ? customizedParams.getBodyContent() : alipayOpenOperationOpenbizmockEncrydataQueryModel;

        // create path and map variables
        String localVarPath = "/v3/alipay/open/operation/openbizmock/encrydata/query";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        if (customizedParams != null) {
            //额外query参数
            if (customizedParams.getQueryParams() != null && customizedParams.getQueryParams().size() > 0) {
                for (Map.Entry<String, String> entry : customizedParams.getQueryParams().entrySet()) {
                    localVarQueryParams.addAll(localVarApiClient.parameterToPair(entry.getKey(), entry.getValue()));
                }
            }

            if (!Strings.isNullOrEmpty(customizedParams.getAppAuthToken())) {
                localVarHeaderParams.put("alipay-app-auth-token", customizedParams.getAppAuthToken());
            }

            //额外非全局header参数
            if (customizedParams.getHeaderParams() != null && customizedParams.getHeaderParams().size() > 0) {
                localVarHeaderParams.putAll(customizedParams.getHeaderParams());
            }
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call query_0ValidateBeforeCall(AlipayOpenOperationOpenbizmockEncrydataQueryModel alipayOpenOperationOpenbizmockEncrydataQueryModel, final ApiCallback _callback, CustomizedParams customizedParams) throws ApiException {
        

        okhttp3.Call localVarCall = query_0Call(alipayOpenOperationOpenbizmockEncrydataQueryModel, _callback, customizedParams);
        return localVarCall;

    }

    /**
     * 测试专用_此接口类型为强制加密接口
     * 测试专用_此接口类型为强制加密接口
     * @param alipayOpenOperationOpenbizmockEncrydataQueryModel  (optional)
     * @return AlipayOpenOperationOpenbizmockEncrydataQueryResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public AlipayOpenOperationOpenbizmockEncrydataQueryResponseModel query_0(AlipayOpenOperationOpenbizmockEncrydataQueryModel alipayOpenOperationOpenbizmockEncrydataQueryModel) throws ApiException {
        ApiResponse<AlipayOpenOperationOpenbizmockEncrydataQueryResponseModel> localVarResp = query_0WithHttpInfo(alipayOpenOperationOpenbizmockEncrydataQueryModel, null);
        return localVarResp.getData();
    }

    public AlipayOpenOperationOpenbizmockEncrydataQueryResponseModel query_0(AlipayOpenOperationOpenbizmockEncrydataQueryModel alipayOpenOperationOpenbizmockEncrydataQueryModel, CustomizedParams customizedParams) throws ApiException {
        ApiResponse<AlipayOpenOperationOpenbizmockEncrydataQueryResponseModel> localVarResp = query_0WithHttpInfo(alipayOpenOperationOpenbizmockEncrydataQueryModel, customizedParams);
        return localVarResp.getData();
    }

    /**
     * 测试专用_此接口类型为强制加密接口
     * 测试专用_此接口类型为强制加密接口
     * @param alipayOpenOperationOpenbizmockEncrydataQueryModel  (optional)
     * @return ApiResponse&lt;AlipayOpenOperationOpenbizmockEncrydataQueryResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AlipayOpenOperationOpenbizmockEncrydataQueryResponseModel> query_0WithHttpInfo(AlipayOpenOperationOpenbizmockEncrydataQueryModel alipayOpenOperationOpenbizmockEncrydataQueryModel, CustomizedParams customizedParams) throws ApiException {
        okhttp3.Call localVarCall = query_0ValidateBeforeCall(alipayOpenOperationOpenbizmockEncrydataQueryModel, null, customizedParams);
        try {
            Type localVarReturnType = new TypeToken<AlipayOpenOperationOpenbizmockEncrydataQueryResponseModel>(){}.getType();
            return localVarApiClient.execute(localVarCall, localVarReturnType);
        } catch (ApiException e) {
            try {
                e.setErrorObject(localVarApiClient.getJSON().getGson().fromJson(e.getResponseBody(), new TypeToken<AlipayOpenOperationOpenbizmockEncrydataQueryDefaultResponse>(){}.getType()));
            } catch (Exception ex) {
                AlipayLogger.logBizWarn(ex);
            }
            throw e;
        }
    }

    /**
     * 测试专用_此接口类型为强制加密接口 (asynchronously)
     * 测试专用_此接口类型为强制加密接口
     * @param alipayOpenOperationOpenbizmockEncrydataQueryModel  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call query_0Async(AlipayOpenOperationOpenbizmockEncrydataQueryModel alipayOpenOperationOpenbizmockEncrydataQueryModel, final ApiCallback<AlipayOpenOperationOpenbizmockEncrydataQueryResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = query_0ValidateBeforeCall(alipayOpenOperationOpenbizmockEncrydataQueryModel, _callback, null);
        Type localVarReturnType = new TypeToken<AlipayOpenOperationOpenbizmockEncrydataQueryResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public okhttp3.Call query_0Async(AlipayOpenOperationOpenbizmockEncrydataQueryModel alipayOpenOperationOpenbizmockEncrydataQueryModel, final ApiCallback<AlipayOpenOperationOpenbizmockEncrydataQueryResponseModel> _callback, CustomizedParams customizedParams) throws ApiException {

        okhttp3.Call localVarCall = query_0ValidateBeforeCall(alipayOpenOperationOpenbizmockEncrydataQueryModel, _callback, customizedParams);
        Type localVarReturnType = new TypeToken<AlipayOpenOperationOpenbizmockEncrydataQueryResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for query_1
     * @param a 测试 (required)
     * @param aOpenid 测试 (required)
     * @param _callback Callback for upload/download progress
     * @param customizedParams
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call query_1Call(String a, String aOpenid, final ApiCallback _callback, CustomizedParams customizedParams) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/alipay/open/operation/openbizmock/gzone/query";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (a != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("a", a));
        }

        if (aOpenid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("a_openid", aOpenid));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        if (customizedParams != null) {
            //额外query参数
            if (customizedParams.getQueryParams() != null && customizedParams.getQueryParams().size() > 0) {
                for (Map.Entry<String, String> entry : customizedParams.getQueryParams().entrySet()) {
                    localVarQueryParams.addAll(localVarApiClient.parameterToPair(entry.getKey(), entry.getValue()));
                }
            }

            if (!Strings.isNullOrEmpty(customizedParams.getAppAuthToken())) {
                localVarHeaderParams.put("alipay-app-auth-token", customizedParams.getAppAuthToken());
            }

            //额外非全局header参数
            if (customizedParams.getHeaderParams() != null && customizedParams.getHeaderParams().size() > 0) {
                localVarHeaderParams.putAll(customizedParams.getHeaderParams());
            }
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call query_1ValidateBeforeCall(String a, String aOpenid, final ApiCallback _callback, CustomizedParams customizedParams) throws ApiException {
        
        // verify the required parameter 'a' is set
        if (a == null) {
            throw new ApiException("Missing the required parameter 'a' when calling query_1(Async)");
        }
        
        // verify the required parameter 'aOpenid' is set
        if (aOpenid == null) {
            throw new ApiException("Missing the required parameter 'aOpenid' when calling query_1(Async)");
        }
        

        okhttp3.Call localVarCall = query_1Call(a, aOpenid, _callback, customizedParams);
        return localVarCall;

    }

    /**
     * V3网关测试gzone转发
     * V3网关测试gzone转发
     * @param a 测试 (required)
     * @param aOpenid 测试 (required)
     * @return AlipayOpenOperationOpenbizmockGzoneQueryResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public AlipayOpenOperationOpenbizmockGzoneQueryResponseModel query_1(String a, String aOpenid) throws ApiException {
        ApiResponse<AlipayOpenOperationOpenbizmockGzoneQueryResponseModel> localVarResp = query_1WithHttpInfo(a, aOpenid, null);
        return localVarResp.getData();
    }

    public AlipayOpenOperationOpenbizmockGzoneQueryResponseModel query_1(String a, String aOpenid, CustomizedParams customizedParams) throws ApiException {
        ApiResponse<AlipayOpenOperationOpenbizmockGzoneQueryResponseModel> localVarResp = query_1WithHttpInfo(a, aOpenid, customizedParams);
        return localVarResp.getData();
    }

    /**
     * V3网关测试gzone转发
     * V3网关测试gzone转发
     * @param a 测试 (required)
     * @param aOpenid 测试 (required)
     * @return ApiResponse&lt;AlipayOpenOperationOpenbizmockGzoneQueryResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AlipayOpenOperationOpenbizmockGzoneQueryResponseModel> query_1WithHttpInfo(String a, String aOpenid, CustomizedParams customizedParams) throws ApiException {
        okhttp3.Call localVarCall = query_1ValidateBeforeCall(a, aOpenid, null, customizedParams);
        try {
            Type localVarReturnType = new TypeToken<AlipayOpenOperationOpenbizmockGzoneQueryResponseModel>(){}.getType();
            return localVarApiClient.execute(localVarCall, localVarReturnType);
        } catch (ApiException e) {
            try {
                e.setErrorObject(localVarApiClient.getJSON().getGson().fromJson(e.getResponseBody(), new TypeToken<AlipayOpenOperationOpenbizmockGzoneQueryDefaultResponse>(){}.getType()));
            } catch (Exception ex) {
                AlipayLogger.logBizWarn(ex);
            }
            throw e;
        }
    }

    /**
     * V3网关测试gzone转发 (asynchronously)
     * V3网关测试gzone转发
     * @param a 测试 (required)
     * @param aOpenid 测试 (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call query_1Async(String a, String aOpenid, final ApiCallback<AlipayOpenOperationOpenbizmockGzoneQueryResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = query_1ValidateBeforeCall(a, aOpenid, _callback, null);
        Type localVarReturnType = new TypeToken<AlipayOpenOperationOpenbizmockGzoneQueryResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public okhttp3.Call query_1Async(String a, String aOpenid, final ApiCallback<AlipayOpenOperationOpenbizmockGzoneQueryResponseModel> _callback, CustomizedParams customizedParams) throws ApiException {

        okhttp3.Call localVarCall = query_1ValidateBeforeCall(a, aOpenid, _callback, customizedParams);
        Type localVarReturnType = new TypeToken<AlipayOpenOperationOpenbizmockGzoneQueryResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for query_2
     * @param userId uid (required)
     * @param openId uid (required)
     * @param testJson 测试循环嵌套含有json数组和对象 (optional)
     * @param alipayOpenOperationOpenbizmockOpenidtestingQueryModel  (optional)
     * @param _callback Callback for upload/download progress
     * @param customizedParams
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call query_2Call(String userId, String openId, String testJson, AlipayOpenOperationOpenbizmockOpenidtestingQueryModel alipayOpenOperationOpenbizmockOpenidtestingQueryModel, final ApiCallback _callback, CustomizedParams customizedParams) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = (customizedParams != null && !Strings.isNullOrEmpty(customizedParams.getBodyContent()))
                ? customizedParams.getBodyContent() : alipayOpenOperationOpenbizmockOpenidtestingQueryModel;

        // create path and map variables
        String localVarPath = "/v3/alipay/open/operation/openbizmock/openidtesting/query";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (userId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("user_id", userId));
        }

        if (openId != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("open_id", openId));
        }

        if (testJson != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("test_json", testJson));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        if (customizedParams != null) {
            //额外query参数
            if (customizedParams.getQueryParams() != null && customizedParams.getQueryParams().size() > 0) {
                for (Map.Entry<String, String> entry : customizedParams.getQueryParams().entrySet()) {
                    localVarQueryParams.addAll(localVarApiClient.parameterToPair(entry.getKey(), entry.getValue()));
                }
            }

            if (!Strings.isNullOrEmpty(customizedParams.getAppAuthToken())) {
                localVarHeaderParams.put("alipay-app-auth-token", customizedParams.getAppAuthToken());
            }

            //额外非全局header参数
            if (customizedParams.getHeaderParams() != null && customizedParams.getHeaderParams().size() > 0) {
                localVarHeaderParams.putAll(customizedParams.getHeaderParams());
            }
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call query_2ValidateBeforeCall(String userId, String openId, String testJson, AlipayOpenOperationOpenbizmockOpenidtestingQueryModel alipayOpenOperationOpenbizmockOpenidtestingQueryModel, final ApiCallback _callback, CustomizedParams customizedParams) throws ApiException {
        
        // verify the required parameter 'userId' is set
        if (userId == null) {
            throw new ApiException("Missing the required parameter 'userId' when calling query_2(Async)");
        }
        
        // verify the required parameter 'openId' is set
        if (openId == null) {
            throw new ApiException("Missing the required parameter 'openId' when calling query_2(Async)");
        }
        

        okhttp3.Call localVarCall = query_2Call(userId, openId, testJson, alipayOpenOperationOpenbizmockOpenidtestingQueryModel, _callback, customizedParams);
        return localVarCall;

    }

    /**
     * 网关测试接口openid升级测试
     * openid升级功能测试
     * @param userId uid (required)
     * @param openId uid (required)
     * @param testJson 测试循环嵌套含有json数组和对象 (optional)
     * @param alipayOpenOperationOpenbizmockOpenidtestingQueryModel  (optional)
     * @return AlipayOpenOperationOpenbizmockOpenidtestingQueryResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public AlipayOpenOperationOpenbizmockOpenidtestingQueryResponseModel query_2(String userId, String openId, String testJson, AlipayOpenOperationOpenbizmockOpenidtestingQueryModel alipayOpenOperationOpenbizmockOpenidtestingQueryModel) throws ApiException {
        ApiResponse<AlipayOpenOperationOpenbizmockOpenidtestingQueryResponseModel> localVarResp = query_2WithHttpInfo(userId, openId, testJson, alipayOpenOperationOpenbizmockOpenidtestingQueryModel, null);
        return localVarResp.getData();
    }

    public AlipayOpenOperationOpenbizmockOpenidtestingQueryResponseModel query_2(String userId, String openId, String testJson, AlipayOpenOperationOpenbizmockOpenidtestingQueryModel alipayOpenOperationOpenbizmockOpenidtestingQueryModel, CustomizedParams customizedParams) throws ApiException {
        ApiResponse<AlipayOpenOperationOpenbizmockOpenidtestingQueryResponseModel> localVarResp = query_2WithHttpInfo(userId, openId, testJson, alipayOpenOperationOpenbizmockOpenidtestingQueryModel, customizedParams);
        return localVarResp.getData();
    }

    /**
     * 网关测试接口openid升级测试
     * openid升级功能测试
     * @param userId uid (required)
     * @param openId uid (required)
     * @param testJson 测试循环嵌套含有json数组和对象 (optional)
     * @param alipayOpenOperationOpenbizmockOpenidtestingQueryModel  (optional)
     * @return ApiResponse&lt;AlipayOpenOperationOpenbizmockOpenidtestingQueryResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AlipayOpenOperationOpenbizmockOpenidtestingQueryResponseModel> query_2WithHttpInfo(String userId, String openId, String testJson, AlipayOpenOperationOpenbizmockOpenidtestingQueryModel alipayOpenOperationOpenbizmockOpenidtestingQueryModel, CustomizedParams customizedParams) throws ApiException {
        okhttp3.Call localVarCall = query_2ValidateBeforeCall(userId, openId, testJson, alipayOpenOperationOpenbizmockOpenidtestingQueryModel, null, customizedParams);
        try {
            Type localVarReturnType = new TypeToken<AlipayOpenOperationOpenbizmockOpenidtestingQueryResponseModel>(){}.getType();
            return localVarApiClient.execute(localVarCall, localVarReturnType);
        } catch (ApiException e) {
            try {
                e.setErrorObject(localVarApiClient.getJSON().getGson().fromJson(e.getResponseBody(), new TypeToken<AlipayOpenOperationOpenbizmockOpenidtestingQueryDefaultResponse>(){}.getType()));
            } catch (Exception ex) {
                AlipayLogger.logBizWarn(ex);
            }
            throw e;
        }
    }

    /**
     * 网关测试接口openid升级测试 (asynchronously)
     * openid升级功能测试
     * @param userId uid (required)
     * @param openId uid (required)
     * @param testJson 测试循环嵌套含有json数组和对象 (optional)
     * @param alipayOpenOperationOpenbizmockOpenidtestingQueryModel  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call query_2Async(String userId, String openId, String testJson, AlipayOpenOperationOpenbizmockOpenidtestingQueryModel alipayOpenOperationOpenbizmockOpenidtestingQueryModel, final ApiCallback<AlipayOpenOperationOpenbizmockOpenidtestingQueryResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = query_2ValidateBeforeCall(userId, openId, testJson, alipayOpenOperationOpenbizmockOpenidtestingQueryModel, _callback, null);
        Type localVarReturnType = new TypeToken<AlipayOpenOperationOpenbizmockOpenidtestingQueryResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public okhttp3.Call query_2Async(String userId, String openId, String testJson, AlipayOpenOperationOpenbizmockOpenidtestingQueryModel alipayOpenOperationOpenbizmockOpenidtestingQueryModel, final ApiCallback<AlipayOpenOperationOpenbizmockOpenidtestingQueryResponseModel> _callback, CustomizedParams customizedParams) throws ApiException {

        okhttp3.Call localVarCall = query_2ValidateBeforeCall(userId, openId, testJson, alipayOpenOperationOpenbizmockOpenidtestingQueryModel, _callback, customizedParams);
        Type localVarReturnType = new TypeToken<AlipayOpenOperationOpenbizmockOpenidtestingQueryResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for query_3
     * @param uid 测试专用 (required)
     * @param lalalaOpenid 测试专用 (required)
     * @param testJson 测试专用 (optional)
     * @param testJsonOpenid 测试专用 (optional)
     * @param hahaha 测试 (optional)
     * @param hahahaOpenid 测试 (optional)
     * @param _callback Callback for upload/download progress
     * @param customizedParams
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call query_3Call(String uid, String lalalaOpenid, String testJson, String testJsonOpenid, String hahaha, String hahahaOpenid, final ApiCallback _callback, CustomizedParams customizedParams) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/alipay/open/operation/openbizmock/rzone/query";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (uid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("uid", uid));
        }

        if (lalalaOpenid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("lalala_openid", lalalaOpenid));
        }

        if (testJson != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("test_json", testJson));
        }

        if (testJsonOpenid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("test_json_openid", testJsonOpenid));
        }

        if (hahaha != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("hahaha", hahaha));
        }

        if (hahahaOpenid != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("hahaha_openid", hahahaOpenid));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        if (customizedParams != null) {
            //额外query参数
            if (customizedParams.getQueryParams() != null && customizedParams.getQueryParams().size() > 0) {
                for (Map.Entry<String, String> entry : customizedParams.getQueryParams().entrySet()) {
                    localVarQueryParams.addAll(localVarApiClient.parameterToPair(entry.getKey(), entry.getValue()));
                }
            }

            if (!Strings.isNullOrEmpty(customizedParams.getAppAuthToken())) {
                localVarHeaderParams.put("alipay-app-auth-token", customizedParams.getAppAuthToken());
            }

            //额外非全局header参数
            if (customizedParams.getHeaderParams() != null && customizedParams.getHeaderParams().size() > 0) {
                localVarHeaderParams.putAll(customizedParams.getHeaderParams());
            }
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call query_3ValidateBeforeCall(String uid, String lalalaOpenid, String testJson, String testJsonOpenid, String hahaha, String hahahaOpenid, final ApiCallback _callback, CustomizedParams customizedParams) throws ApiException {
        
        // verify the required parameter 'uid' is set
        if (uid == null) {
            throw new ApiException("Missing the required parameter 'uid' when calling query_3(Async)");
        }
        
        // verify the required parameter 'lalalaOpenid' is set
        if (lalalaOpenid == null) {
            throw new ApiException("Missing the required parameter 'lalalaOpenid' when calling query_3(Async)");
        }
        

        okhttp3.Call localVarCall = query_3Call(uid, lalalaOpenid, testJson, testJsonOpenid, hahaha, hahahaOpenid, _callback, customizedParams);
        return localVarCall;

    }

    /**
     * 测试openapi路由
     * 测试openapi路由rzone_uid的规则
     * @param uid 测试专用 (required)
     * @param lalalaOpenid 测试专用 (required)
     * @param testJson 测试专用 (optional)
     * @param testJsonOpenid 测试专用 (optional)
     * @param hahaha 测试 (optional)
     * @param hahahaOpenid 测试 (optional)
     * @return AlipayOpenOperationOpenbizmockRzoneQueryResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public AlipayOpenOperationOpenbizmockRzoneQueryResponseModel query_3(String uid, String lalalaOpenid, String testJson, String testJsonOpenid, String hahaha, String hahahaOpenid) throws ApiException {
        ApiResponse<AlipayOpenOperationOpenbizmockRzoneQueryResponseModel> localVarResp = query_3WithHttpInfo(uid, lalalaOpenid, testJson, testJsonOpenid, hahaha, hahahaOpenid, null);
        return localVarResp.getData();
    }

    public AlipayOpenOperationOpenbizmockRzoneQueryResponseModel query_3(String uid, String lalalaOpenid, String testJson, String testJsonOpenid, String hahaha, String hahahaOpenid, CustomizedParams customizedParams) throws ApiException {
        ApiResponse<AlipayOpenOperationOpenbizmockRzoneQueryResponseModel> localVarResp = query_3WithHttpInfo(uid, lalalaOpenid, testJson, testJsonOpenid, hahaha, hahahaOpenid, customizedParams);
        return localVarResp.getData();
    }

    /**
     * 测试openapi路由
     * 测试openapi路由rzone_uid的规则
     * @param uid 测试专用 (required)
     * @param lalalaOpenid 测试专用 (required)
     * @param testJson 测试专用 (optional)
     * @param testJsonOpenid 测试专用 (optional)
     * @param hahaha 测试 (optional)
     * @param hahahaOpenid 测试 (optional)
     * @return ApiResponse&lt;AlipayOpenOperationOpenbizmockRzoneQueryResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AlipayOpenOperationOpenbizmockRzoneQueryResponseModel> query_3WithHttpInfo(String uid, String lalalaOpenid, String testJson, String testJsonOpenid, String hahaha, String hahahaOpenid, CustomizedParams customizedParams) throws ApiException {
        okhttp3.Call localVarCall = query_3ValidateBeforeCall(uid, lalalaOpenid, testJson, testJsonOpenid, hahaha, hahahaOpenid, null, customizedParams);
        try {
            Type localVarReturnType = new TypeToken<AlipayOpenOperationOpenbizmockRzoneQueryResponseModel>(){}.getType();
            return localVarApiClient.execute(localVarCall, localVarReturnType);
        } catch (ApiException e) {
            try {
                e.setErrorObject(localVarApiClient.getJSON().getGson().fromJson(e.getResponseBody(), new TypeToken<AlipayOpenOperationOpenbizmockRzoneQueryDefaultResponse>(){}.getType()));
            } catch (Exception ex) {
                AlipayLogger.logBizWarn(ex);
            }
            throw e;
        }
    }

    /**
     * 测试openapi路由 (asynchronously)
     * 测试openapi路由rzone_uid的规则
     * @param uid 测试专用 (required)
     * @param lalalaOpenid 测试专用 (required)
     * @param testJson 测试专用 (optional)
     * @param testJsonOpenid 测试专用 (optional)
     * @param hahaha 测试 (optional)
     * @param hahahaOpenid 测试 (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call query_3Async(String uid, String lalalaOpenid, String testJson, String testJsonOpenid, String hahaha, String hahahaOpenid, final ApiCallback<AlipayOpenOperationOpenbizmockRzoneQueryResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = query_3ValidateBeforeCall(uid, lalalaOpenid, testJson, testJsonOpenid, hahaha, hahahaOpenid, _callback, null);
        Type localVarReturnType = new TypeToken<AlipayOpenOperationOpenbizmockRzoneQueryResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public okhttp3.Call query_3Async(String uid, String lalalaOpenid, String testJson, String testJsonOpenid, String hahaha, String hahahaOpenid, final ApiCallback<AlipayOpenOperationOpenbizmockRzoneQueryResponseModel> _callback, CustomizedParams customizedParams) throws ApiException {

        okhttp3.Call localVarCall = query_3ValidateBeforeCall(uid, lalalaOpenid, testJson, testJsonOpenid, hahaha, hahahaOpenid, _callback, customizedParams);
        Type localVarReturnType = new TypeToken<AlipayOpenOperationOpenbizmockRzoneQueryResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for query_4
     * @param alipayOpenOperationOpenbizmockRzonegroovyQueryModel  (optional)
     * @param _callback Callback for upload/download progress
     * @param customizedParams
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call query_4Call(AlipayOpenOperationOpenbizmockRzonegroovyQueryModel alipayOpenOperationOpenbizmockRzonegroovyQueryModel, final ApiCallback _callback, CustomizedParams customizedParams) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = (customizedParams != null && !Strings.isNullOrEmpty(customizedParams.getBodyContent()))
                ? customizedParams.getBodyContent() : alipayOpenOperationOpenbizmockRzonegroovyQueryModel;

        // create path and map variables
        String localVarPath = "/v3/alipay/open/operation/openbizmock/rzonegroovy/query";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        if (customizedParams != null) {
            //额外query参数
            if (customizedParams.getQueryParams() != null && customizedParams.getQueryParams().size() > 0) {
                for (Map.Entry<String, String> entry : customizedParams.getQueryParams().entrySet()) {
                    localVarQueryParams.addAll(localVarApiClient.parameterToPair(entry.getKey(), entry.getValue()));
                }
            }

            if (!Strings.isNullOrEmpty(customizedParams.getAppAuthToken())) {
                localVarHeaderParams.put("alipay-app-auth-token", customizedParams.getAppAuthToken());
            }

            //额外非全局header参数
            if (customizedParams.getHeaderParams() != null && customizedParams.getHeaderParams().size() > 0) {
                localVarHeaderParams.putAll(customizedParams.getHeaderParams());
            }
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call query_4ValidateBeforeCall(AlipayOpenOperationOpenbizmockRzonegroovyQueryModel alipayOpenOperationOpenbizmockRzonegroovyQueryModel, final ApiCallback _callback, CustomizedParams customizedParams) throws ApiException {
        

        okhttp3.Call localVarCall = query_4Call(alipayOpenOperationOpenbizmockRzonegroovyQueryModel, _callback, customizedParams);
        return localVarCall;

    }

    /**
     * 测试路由转发groovy脚本
     * 测试路由转发groovy脚本
     * @param alipayOpenOperationOpenbizmockRzonegroovyQueryModel  (optional)
     * @return AlipayOpenOperationOpenbizmockRzonegroovyQueryResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public AlipayOpenOperationOpenbizmockRzonegroovyQueryResponseModel query_4(AlipayOpenOperationOpenbizmockRzonegroovyQueryModel alipayOpenOperationOpenbizmockRzonegroovyQueryModel) throws ApiException {
        ApiResponse<AlipayOpenOperationOpenbizmockRzonegroovyQueryResponseModel> localVarResp = query_4WithHttpInfo(alipayOpenOperationOpenbizmockRzonegroovyQueryModel, null);
        return localVarResp.getData();
    }

    public AlipayOpenOperationOpenbizmockRzonegroovyQueryResponseModel query_4(AlipayOpenOperationOpenbizmockRzonegroovyQueryModel alipayOpenOperationOpenbizmockRzonegroovyQueryModel, CustomizedParams customizedParams) throws ApiException {
        ApiResponse<AlipayOpenOperationOpenbizmockRzonegroovyQueryResponseModel> localVarResp = query_4WithHttpInfo(alipayOpenOperationOpenbizmockRzonegroovyQueryModel, customizedParams);
        return localVarResp.getData();
    }

    /**
     * 测试路由转发groovy脚本
     * 测试路由转发groovy脚本
     * @param alipayOpenOperationOpenbizmockRzonegroovyQueryModel  (optional)
     * @return ApiResponse&lt;AlipayOpenOperationOpenbizmockRzonegroovyQueryResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AlipayOpenOperationOpenbizmockRzonegroovyQueryResponseModel> query_4WithHttpInfo(AlipayOpenOperationOpenbizmockRzonegroovyQueryModel alipayOpenOperationOpenbizmockRzonegroovyQueryModel, CustomizedParams customizedParams) throws ApiException {
        okhttp3.Call localVarCall = query_4ValidateBeforeCall(alipayOpenOperationOpenbizmockRzonegroovyQueryModel, null, customizedParams);
        try {
            Type localVarReturnType = new TypeToken<AlipayOpenOperationOpenbizmockRzonegroovyQueryResponseModel>(){}.getType();
            return localVarApiClient.execute(localVarCall, localVarReturnType);
        } catch (ApiException e) {
            try {
                e.setErrorObject(localVarApiClient.getJSON().getGson().fromJson(e.getResponseBody(), new TypeToken<AlipayOpenOperationOpenbizmockRzonegroovyQueryDefaultResponse>(){}.getType()));
            } catch (Exception ex) {
                AlipayLogger.logBizWarn(ex);
            }
            throw e;
        }
    }

    /**
     * 测试路由转发groovy脚本 (asynchronously)
     * 测试路由转发groovy脚本
     * @param alipayOpenOperationOpenbizmockRzonegroovyQueryModel  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call query_4Async(AlipayOpenOperationOpenbizmockRzonegroovyQueryModel alipayOpenOperationOpenbizmockRzonegroovyQueryModel, final ApiCallback<AlipayOpenOperationOpenbizmockRzonegroovyQueryResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = query_4ValidateBeforeCall(alipayOpenOperationOpenbizmockRzonegroovyQueryModel, _callback, null);
        Type localVarReturnType = new TypeToken<AlipayOpenOperationOpenbizmockRzonegroovyQueryResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public okhttp3.Call query_4Async(AlipayOpenOperationOpenbizmockRzonegroovyQueryModel alipayOpenOperationOpenbizmockRzonegroovyQueryModel, final ApiCallback<AlipayOpenOperationOpenbizmockRzonegroovyQueryResponseModel> _callback, CustomizedParams customizedParams) throws ApiException {

        okhttp3.Call localVarCall = query_4ValidateBeforeCall(alipayOpenOperationOpenbizmockRzonegroovyQueryModel, _callback, customizedParams);
        Type localVarReturnType = new TypeToken<AlipayOpenOperationOpenbizmockRzonegroovyQueryResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for query_5
     * @param keykey ceshi (required)
     * @param _callback Callback for upload/download progress
     * @param customizedParams
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call query_5Call(String keykey, final ApiCallback _callback, CustomizedParams customizedParams) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/alipay/open/operation/openbizmock/testcertificate/query";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (keykey != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keykey", keykey));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        if (customizedParams != null) {
            //额外query参数
            if (customizedParams.getQueryParams() != null && customizedParams.getQueryParams().size() > 0) {
                for (Map.Entry<String, String> entry : customizedParams.getQueryParams().entrySet()) {
                    localVarQueryParams.addAll(localVarApiClient.parameterToPair(entry.getKey(), entry.getValue()));
                }
            }

            if (!Strings.isNullOrEmpty(customizedParams.getAppAuthToken())) {
                localVarHeaderParams.put("alipay-app-auth-token", customizedParams.getAppAuthToken());
            }

            //额外非全局header参数
            if (customizedParams.getHeaderParams() != null && customizedParams.getHeaderParams().size() > 0) {
                localVarHeaderParams.putAll(customizedParams.getHeaderParams());
            }
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call query_5ValidateBeforeCall(String keykey, final ApiCallback _callback, CustomizedParams customizedParams) throws ApiException {
        
        // verify the required parameter 'keykey' is set
        if (keykey == null) {
            throw new ApiException("Missing the required parameter 'keykey' when calling query_5(Async)");
        }
        

        okhttp3.Call localVarCall = query_5Call(keykey, _callback, customizedParams);
        return localVarCall;

    }

    /**
     * 测试专用此接口为强制走证书的接口
     * 测试专用此接口为强制走证书的接口
     * @param keykey ceshi (required)
     * @return AlipayOpenOperationOpenbizmockTestcertificateQueryResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public AlipayOpenOperationOpenbizmockTestcertificateQueryResponseModel query_5(String keykey) throws ApiException {
        ApiResponse<AlipayOpenOperationOpenbizmockTestcertificateQueryResponseModel> localVarResp = query_5WithHttpInfo(keykey, null);
        return localVarResp.getData();
    }

    public AlipayOpenOperationOpenbizmockTestcertificateQueryResponseModel query_5(String keykey, CustomizedParams customizedParams) throws ApiException {
        ApiResponse<AlipayOpenOperationOpenbizmockTestcertificateQueryResponseModel> localVarResp = query_5WithHttpInfo(keykey, customizedParams);
        return localVarResp.getData();
    }

    /**
     * 测试专用此接口为强制走证书的接口
     * 测试专用此接口为强制走证书的接口
     * @param keykey ceshi (required)
     * @return ApiResponse&lt;AlipayOpenOperationOpenbizmockTestcertificateQueryResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AlipayOpenOperationOpenbizmockTestcertificateQueryResponseModel> query_5WithHttpInfo(String keykey, CustomizedParams customizedParams) throws ApiException {
        okhttp3.Call localVarCall = query_5ValidateBeforeCall(keykey, null, customizedParams);
        try {
            Type localVarReturnType = new TypeToken<AlipayOpenOperationOpenbizmockTestcertificateQueryResponseModel>(){}.getType();
            return localVarApiClient.execute(localVarCall, localVarReturnType);
        } catch (ApiException e) {
            try {
                e.setErrorObject(localVarApiClient.getJSON().getGson().fromJson(e.getResponseBody(), new TypeToken<AlipayOpenOperationOpenbizmockTestcertificateQueryDefaultResponse>(){}.getType()));
            } catch (Exception ex) {
                AlipayLogger.logBizWarn(ex);
            }
            throw e;
        }
    }

    /**
     * 测试专用此接口为强制走证书的接口 (asynchronously)
     * 测试专用此接口为强制走证书的接口
     * @param keykey ceshi (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call query_5Async(String keykey, final ApiCallback<AlipayOpenOperationOpenbizmockTestcertificateQueryResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = query_5ValidateBeforeCall(keykey, _callback, null);
        Type localVarReturnType = new TypeToken<AlipayOpenOperationOpenbizmockTestcertificateQueryResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public okhttp3.Call query_5Async(String keykey, final ApiCallback<AlipayOpenOperationOpenbizmockTestcertificateQueryResponseModel> _callback, CustomizedParams customizedParams) throws ApiException {

        okhttp3.Call localVarCall = query_5ValidateBeforeCall(keykey, _callback, customizedParams);
        Type localVarReturnType = new TypeToken<AlipayOpenOperationOpenbizmockTestcertificateQueryResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for query_6
     * @param key 测试 (required)
     * @param keykey 测试 (required)
     * @param _callback Callback for upload/download progress
     * @param customizedParams
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call query_6Call(String key, String keykey, final ApiCallback _callback, CustomizedParams customizedParams) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = null;

        // create path and map variables
        String localVarPath = "/v3/alipay/open/operation/openbizmock/testerrorcode/query";

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (key != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("key", key));
        }

        if (keykey != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("keykey", keykey));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        if (customizedParams != null) {
            //额外query参数
            if (customizedParams.getQueryParams() != null && customizedParams.getQueryParams().size() > 0) {
                for (Map.Entry<String, String> entry : customizedParams.getQueryParams().entrySet()) {
                    localVarQueryParams.addAll(localVarApiClient.parameterToPair(entry.getKey(), entry.getValue()));
                }
            }

            if (!Strings.isNullOrEmpty(customizedParams.getAppAuthToken())) {
                localVarHeaderParams.put("alipay-app-auth-token", customizedParams.getAppAuthToken());
            }

            //额外非全局header参数
            if (customizedParams.getHeaderParams() != null && customizedParams.getHeaderParams().size() > 0) {
                localVarHeaderParams.putAll(customizedParams.getHeaderParams());
            }
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "GET", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call query_6ValidateBeforeCall(String key, String keykey, final ApiCallback _callback, CustomizedParams customizedParams) throws ApiException {
        
        // verify the required parameter 'key' is set
        if (key == null) {
            throw new ApiException("Missing the required parameter 'key' when calling query_6(Async)");
        }
        
        // verify the required parameter 'keykey' is set
        if (keykey == null) {
            throw new ApiException("Missing the required parameter 'keykey' when calling query_6(Async)");
        }
        

        okhttp3.Call localVarCall = query_6Call(key, keykey, _callback, customizedParams);
        return localVarCall;

    }

    /**
     * 测试错误码验证接口
     * 测试错误码验证接口
     * @param key 测试 (required)
     * @param keykey 测试 (required)
     * @return AlipayOpenOperationOpenbizmockTesterrorcodeQueryResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public AlipayOpenOperationOpenbizmockTesterrorcodeQueryResponseModel query_6(String key, String keykey) throws ApiException {
        ApiResponse<AlipayOpenOperationOpenbizmockTesterrorcodeQueryResponseModel> localVarResp = query_6WithHttpInfo(key, keykey, null);
        return localVarResp.getData();
    }

    public AlipayOpenOperationOpenbizmockTesterrorcodeQueryResponseModel query_6(String key, String keykey, CustomizedParams customizedParams) throws ApiException {
        ApiResponse<AlipayOpenOperationOpenbizmockTesterrorcodeQueryResponseModel> localVarResp = query_6WithHttpInfo(key, keykey, customizedParams);
        return localVarResp.getData();
    }

    /**
     * 测试错误码验证接口
     * 测试错误码验证接口
     * @param key 测试 (required)
     * @param keykey 测试 (required)
     * @return ApiResponse&lt;AlipayOpenOperationOpenbizmockTesterrorcodeQueryResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AlipayOpenOperationOpenbizmockTesterrorcodeQueryResponseModel> query_6WithHttpInfo(String key, String keykey, CustomizedParams customizedParams) throws ApiException {
        okhttp3.Call localVarCall = query_6ValidateBeforeCall(key, keykey, null, customizedParams);
        try {
            Type localVarReturnType = new TypeToken<AlipayOpenOperationOpenbizmockTesterrorcodeQueryResponseModel>(){}.getType();
            return localVarApiClient.execute(localVarCall, localVarReturnType);
        } catch (ApiException e) {
            try {
                e.setErrorObject(localVarApiClient.getJSON().getGson().fromJson(e.getResponseBody(), new TypeToken<AlipayOpenOperationOpenbizmockTesterrorcodeQueryDefaultResponse>(){}.getType()));
            } catch (Exception ex) {
                AlipayLogger.logBizWarn(ex);
            }
            throw e;
        }
    }

    /**
     * 测试错误码验证接口 (asynchronously)
     * 测试错误码验证接口
     * @param key 测试 (required)
     * @param keykey 测试 (required)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call query_6Async(String key, String keykey, final ApiCallback<AlipayOpenOperationOpenbizmockTesterrorcodeQueryResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = query_6ValidateBeforeCall(key, keykey, _callback, null);
        Type localVarReturnType = new TypeToken<AlipayOpenOperationOpenbizmockTesterrorcodeQueryResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public okhttp3.Call query_6Async(String key, String keykey, final ApiCallback<AlipayOpenOperationOpenbizmockTesterrorcodeQueryResponseModel> _callback, CustomizedParams customizedParams) throws ApiException {

        okhttp3.Call localVarCall = query_6ValidateBeforeCall(key, keykey, _callback, customizedParams);
        Type localVarReturnType = new TypeToken<AlipayOpenOperationOpenbizmockTesterrorcodeQueryResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
    /**
     * Build call for query_7
     * @param keykey ceshi (required)
     * @param a 测试 (required)
     * @param c 测试 (required)
     * @param b ceshi (optional)
     * @param alipayOpenOperationOpenbizmockTestpathkeyQueryModel  (optional)
     * @param _callback Callback for upload/download progress
     * @param customizedParams
     * @return Call to execute
     * @throws ApiException If fail to serialize the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call query_7Call(String keykey, String a, String c, String b, AlipayOpenOperationOpenbizmockTestpathkeyQueryModel alipayOpenOperationOpenbizmockTestpathkeyQueryModel, final ApiCallback _callback, CustomizedParams customizedParams) throws ApiException {
        String basePath = null;
        // Operation Servers
        String[] localBasePaths = new String[] {  };

        // Determine Base Path to Use
        if (localCustomBaseUrl != null){
            basePath = localCustomBaseUrl;
        } else if ( localBasePaths.length > 0 ) {
            basePath = localBasePaths[localHostIndex];
        } else {
            basePath = null;
        }

        Object localVarPostBody = (customizedParams != null && !Strings.isNullOrEmpty(customizedParams.getBodyContent()))
                ? customizedParams.getBodyContent() : alipayOpenOperationOpenbizmockTestpathkeyQueryModel;

        // create path and map variables
        String localVarPath = "/v3/alipay/open/operation/openbizmock/testpathkey/query/{keykey}/{a}"
            .replaceAll("\\{" + "keykey" + "\\}", localVarApiClient.escapeString(keykey.toString()))
            .replaceAll("\\{" + "a" + "\\}", localVarApiClient.escapeString(a.toString()));

        List<Pair> localVarQueryParams = new ArrayList<Pair>();
        List<Pair> localVarCollectionQueryParams = new ArrayList<Pair>();
        Map<String, String> localVarHeaderParams = new HashMap<String, String>();
        Map<String, String> localVarCookieParams = new HashMap<String, String>();
        Map<String, Object> localVarFormParams = new HashMap<String, Object>();

        if (b != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("b", b));
        }

        if (c != null) {
            localVarQueryParams.addAll(localVarApiClient.parameterToPair("c", c));
        }

        final String[] localVarAccepts = {
            "application/json"
        };
        final String localVarAccept = localVarApiClient.selectHeaderAccept(localVarAccepts);
        if (localVarAccept != null) {
            localVarHeaderParams.put("Accept", localVarAccept);
        }

        final String[] localVarContentTypes = {
            "application/json"
        };
        final String localVarContentType = localVarApiClient.selectHeaderContentType(localVarContentTypes);
        if (localVarContentType != null) {
            localVarHeaderParams.put("Content-Type", localVarContentType);
        }

        if (customizedParams != null) {
            //额外query参数
            if (customizedParams.getQueryParams() != null && customizedParams.getQueryParams().size() > 0) {
                for (Map.Entry<String, String> entry : customizedParams.getQueryParams().entrySet()) {
                    localVarQueryParams.addAll(localVarApiClient.parameterToPair(entry.getKey(), entry.getValue()));
                }
            }

            if (!Strings.isNullOrEmpty(customizedParams.getAppAuthToken())) {
                localVarHeaderParams.put("alipay-app-auth-token", customizedParams.getAppAuthToken());
            }

            //额外非全局header参数
            if (customizedParams.getHeaderParams() != null && customizedParams.getHeaderParams().size() > 0) {
                localVarHeaderParams.putAll(customizedParams.getHeaderParams());
            }
        }

        String[] localVarAuthNames = new String[] {  };
        return localVarApiClient.buildCall(basePath, localVarPath, "POST", localVarQueryParams, localVarCollectionQueryParams, localVarPostBody, localVarHeaderParams, localVarCookieParams, localVarFormParams, localVarAuthNames, _callback);
    }

    @SuppressWarnings("rawtypes")
    private okhttp3.Call query_7ValidateBeforeCall(String keykey, String a, String c, String b, AlipayOpenOperationOpenbizmockTestpathkeyQueryModel alipayOpenOperationOpenbizmockTestpathkeyQueryModel, final ApiCallback _callback, CustomizedParams customizedParams) throws ApiException {
        
        // verify the required parameter 'keykey' is set
        if (keykey == null) {
            throw new ApiException("Missing the required parameter 'keykey' when calling query_7(Async)");
        }
        
        // verify the required parameter 'a' is set
        if (a == null) {
            throw new ApiException("Missing the required parameter 'a' when calling query_7(Async)");
        }
        
        // verify the required parameter 'c' is set
        if (c == null) {
            throw new ApiException("Missing the required parameter 'c' when calling query_7(Async)");
        }
        

        okhttp3.Call localVarCall = query_7Call(keykey, a, c, b, alipayOpenOperationOpenbizmockTestpathkeyQueryModel, _callback, customizedParams);
        return localVarCall;

    }

    /**
     * 测试网关协议3.0key和path
     * 测试网关协议3.0key和path
     * @param keykey ceshi (required)
     * @param a 测试 (required)
     * @param c 测试 (required)
     * @param b ceshi (optional)
     * @param alipayOpenOperationOpenbizmockTestpathkeyQueryModel  (optional)
     * @return AlipayOpenOperationOpenbizmockTestpathkeyQueryResponseModel
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public AlipayOpenOperationOpenbizmockTestpathkeyQueryResponseModel query_7(String keykey, String a, String c, String b, AlipayOpenOperationOpenbizmockTestpathkeyQueryModel alipayOpenOperationOpenbizmockTestpathkeyQueryModel) throws ApiException {
        ApiResponse<AlipayOpenOperationOpenbizmockTestpathkeyQueryResponseModel> localVarResp = query_7WithHttpInfo(keykey, a, c, b, alipayOpenOperationOpenbizmockTestpathkeyQueryModel, null);
        return localVarResp.getData();
    }

    public AlipayOpenOperationOpenbizmockTestpathkeyQueryResponseModel query_7(String keykey, String a, String c, String b, AlipayOpenOperationOpenbizmockTestpathkeyQueryModel alipayOpenOperationOpenbizmockTestpathkeyQueryModel, CustomizedParams customizedParams) throws ApiException {
        ApiResponse<AlipayOpenOperationOpenbizmockTestpathkeyQueryResponseModel> localVarResp = query_7WithHttpInfo(keykey, a, c, b, alipayOpenOperationOpenbizmockTestpathkeyQueryModel, customizedParams);
        return localVarResp.getData();
    }

    /**
     * 测试网关协议3.0key和path
     * 测试网关协议3.0key和path
     * @param keykey ceshi (required)
     * @param a 测试 (required)
     * @param c 测试 (required)
     * @param b ceshi (optional)
     * @param alipayOpenOperationOpenbizmockTestpathkeyQueryModel  (optional)
     * @return ApiResponse&lt;AlipayOpenOperationOpenbizmockTestpathkeyQueryResponseModel&gt;
     * @throws ApiException If fail to call the API, e.g. server error or cannot deserialize the response body
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public ApiResponse<AlipayOpenOperationOpenbizmockTestpathkeyQueryResponseModel> query_7WithHttpInfo(String keykey, String a, String c, String b, AlipayOpenOperationOpenbizmockTestpathkeyQueryModel alipayOpenOperationOpenbizmockTestpathkeyQueryModel, CustomizedParams customizedParams) throws ApiException {
        okhttp3.Call localVarCall = query_7ValidateBeforeCall(keykey, a, c, b, alipayOpenOperationOpenbizmockTestpathkeyQueryModel, null, customizedParams);
        try {
            Type localVarReturnType = new TypeToken<AlipayOpenOperationOpenbizmockTestpathkeyQueryResponseModel>(){}.getType();
            return localVarApiClient.execute(localVarCall, localVarReturnType);
        } catch (ApiException e) {
            try {
                e.setErrorObject(localVarApiClient.getJSON().getGson().fromJson(e.getResponseBody(), new TypeToken<AlipayOpenOperationOpenbizmockTestpathkeyQueryDefaultResponse>(){}.getType()));
            } catch (Exception ex) {
                AlipayLogger.logBizWarn(ex);
            }
            throw e;
        }
    }

    /**
     * 测试网关协议3.0key和path (asynchronously)
     * 测试网关协议3.0key和path
     * @param keykey ceshi (required)
     * @param a 测试 (required)
     * @param c 测试 (required)
     * @param b ceshi (optional)
     * @param alipayOpenOperationOpenbizmockTestpathkeyQueryModel  (optional)
     * @param _callback The callback to be executed when the API call finishes
     * @return The request call
     * @throws ApiException If fail to process the API call, e.g. serializing the request body object
     * @http.response.details
     <table summary="Response Details" border="1">
        <tr><td> Status Code </td><td> Description </td><td> Response Headers </td></tr>
        <tr><td> 200 </td><td> common response </td><td>  -  </td></tr>
        <tr><td> 0 </td><td> 请求失败 </td><td>  -  </td></tr>
     </table>
     */
    public okhttp3.Call query_7Async(String keykey, String a, String c, String b, AlipayOpenOperationOpenbizmockTestpathkeyQueryModel alipayOpenOperationOpenbizmockTestpathkeyQueryModel, final ApiCallback<AlipayOpenOperationOpenbizmockTestpathkeyQueryResponseModel> _callback) throws ApiException {

        okhttp3.Call localVarCall = query_7ValidateBeforeCall(keykey, a, c, b, alipayOpenOperationOpenbizmockTestpathkeyQueryModel, _callback, null);
        Type localVarReturnType = new TypeToken<AlipayOpenOperationOpenbizmockTestpathkeyQueryResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }

    public okhttp3.Call query_7Async(String keykey, String a, String c, String b, AlipayOpenOperationOpenbizmockTestpathkeyQueryModel alipayOpenOperationOpenbizmockTestpathkeyQueryModel, final ApiCallback<AlipayOpenOperationOpenbizmockTestpathkeyQueryResponseModel> _callback, CustomizedParams customizedParams) throws ApiException {

        okhttp3.Call localVarCall = query_7ValidateBeforeCall(keykey, a, c, b, alipayOpenOperationOpenbizmockTestpathkeyQueryModel, _callback, customizedParams);
        Type localVarReturnType = new TypeToken<AlipayOpenOperationOpenbizmockTestpathkeyQueryResponseModel>(){}.getType();
        localVarApiClient.executeAsync(localVarCall, localVarReturnType, _callback);
        return localVarCall;
    }
}
